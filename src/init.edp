// Parameters
// real nu = 1./100.;
real nu = 0.04;
real ts = 1;
real dt = 0.05/ts;
real t = 0;
real G=1;
real J=0.04;
real Q=30;

// Initial rectangle mesh
real a= 1.5, b= 5, c=15;
border L1(t=0,1) { x=-b; y=a-3*t; }
border L2(t=0,1) { x=-b+c*t; y=-a; }
border L3(t=0,1) { x=c-5; y=3*t-a; }
border L4(t=0,1) { x=2*b-c*t; y=a; }
int n = 3;
mesh Th1 = buildmesh(L1(2*n)+L2(9*n)+L3(2*n)+L4(9*n)); 
plot(Th1,ps="initialMesh.eps",bw=1);

// Fespace
fespace Xh1(Th1, P2);
Xh1 u1, v1;
Xh1 u2, v2;
Xh1 up1, up2;
Xh1 psi, phi;
Xh1 fx;
fespace Mh1(Th1, P1);
Mh1 p, q;
real alpha = 1/dt;
real epsr=1e-8;

// cout<<"number of node = "<<u1.n<<endl;
problem NS ([u1, u2, p], [v1, v2, q])
	= int2d(Th1)(
		  alpha*(u1*v1 + u2*v2)
		+nu * (
			  dx(u1)*dx(v1) + dy(u1)*dy(v1)
			+ dx(u2)*dx(v2) + dy(u2)*dy(v2)
		)
		- p*q*epsr
		- p*dx(v1) - p*dy(v2)
		//- fx*v1 
		- q*dx(u1) - q*dy(u2)
	)
	+ int2d(Th1)(
		- alpha*convect([up1, up2], -dt, up1)*v1
		- alpha*convect([up1, up2], -dt, up2)*v2
		- fx*v1
	)
	+ int1d(Th1, L1)(nu*50*(pow(sin(pi*t),2))*y/1.5/1.5*v2)
	+ int1d(Th1, L3)(nu*dx(u1)*(v1-v2)+p*v2)
    // - int1d(Th1, L3)(25*p*v1)
	+ on(L2, L4, u1=0, u2=0)
	+ on(L1, u1=25*(pow(sin(pi*t),2))*(1-pow(y/1.5,2)), u2=0);

real Z=5e-5;
real K=1;
real U1=0;

{
	ofstream file("uk.txt");
	file << U1 << endl;
}
for(int i=0; i<ts; i++){
	up1 = u1;
	up2 = u2;
	fx = 0;
	NS;
	t+=dt;
}

// cout<<"number of node = "<<u1.n<<endl;

real Z1=int1d(Th1)(2*dx(u1)*N.x*(1-N.x*N.x)-(dx(u2)+dy(u1))*N.x*N.x*N.y+N.y*(1-N.x*N.x)*(dy(u1)+dx(u2))-2*dy(u2)*N.x*N.y*N.y);
real Z2=int1d(Th1)((dx(u2)+dy(u1))*(1-N.y*N.y)*N.x-2*dx(u1)*N.x*N.x*N.y+2*dy(u2)*(1-N.y*N.y)*N.y-N.x*N.y*N.y*(dy(u1)+dx(u2)));
real M1=Z1*J*G/Q;
real M2=Z2*J*G/Q;
real R0=1/(1+U1)/(1+M1*M1+M2*M2);
U1=U1+dt*K*Z*R0;
cout<<"sigma="<<M1*M1+M2*M2<<endl;

{
	ofstream file("uk.txt", append);
	file << U1 << endl;
}
{
	ofstream file("rk.txt");
	file << R0 << endl;
}
cout <<"t = "<<t<< endl;
cout <<"U = "<<U1<<endl;

// Rmess
cout<<"Remessing..."<<endl;
real d=U1;
border L5(t=0,1) { x=-b; y=a-3*t; }
border L6(t=0,1) { x=-b+c*t; y=d*exp(-pow(x,2))-a; }
border L7(t=0,1) { x=c-5; y=3*t-a; }
border L8(t=0,1) { x=2*b-c*t; y=a-d*exp(-pow(x,2)); }
mesh Th2 = buildmesh(L5(2*n)+L6(10*n)+L7(2*n)+L8(10*n)); 
plot(Th2,ps="multiscale1.eps",bw=1,wait=false);
savemesh(Th2,"toto.msh");
// Fespace
fespace Xh2(Th2, P2);
Xh2 u11, v11;
Xh2 u12, v12;
Xh2 up11, up12;
fespace Mh2(Th2, P1);
Mh2 p1, q1;

matrix A=interpolate(Xh2,Xh1);
matrix B=interpolate(Mh2,Mh1);

u11[] = A*u1[];
u12[] = A*u2[];
p1[] = B*p[];
problem NS1 ([u11, u12, p1], [v11, v12, q1])
	= int2d(Th2)(
		  alpha*(u11*v11 + u12*v12)
		+nu * (
			  dx(u11)*dx(v11) + dy(u11)*dy(v11)
			+ dx(u12)*dx(v12) + dy(u12)*dy(v12)
		)
		- p1*q1*epsr
		- p1*dx(v11) - p1*dy(v12)
		//- fx*v1 
		- q1*dx(u11) - q1*dy(u12)
	)
	+ int2d(Th2)(
		- alpha*convect([up11, up12], -dt, up11)*v11
		- alpha*convect([up11, up12], -dt, up12)*v12
		- fx*v11
	)
	+ int1d(Th2, L5)(nu*50*(pow(sin(pi*t),2))*y/1.5/1.5*v12)
	+ int1d(Th2, L7)(nu*dx(u11)*(v11-v12)+p1*v12)
    //- int1d(Th2, L7)(25*p1*v11)
	+ on(L6, L8, u11=0, u12=0)
	+ on(L5, u11=25*(pow(sin(pi*t),2))*(1-pow(y/1.5,2)), u12=0);

for(int i=0;i<ts;i++){
	up11 = u11;
	up12 = u12;
	// Solve
	fx = 0;
	NS1;
	t = t+dt;
}

{
	ofstream file("u11.txt");
	file << u11[] << endl;
}
{
	ofstream file("u12.txt");
	file << u12[] << endl;
}
{
	ofstream file("p1.txt");
	file << p1[] << endl;
}
{
	ofstream file("R0.txt");
	file << R0 << endl;
}
{
	ofstream file("U1.txt");
	file << U1 << endl;
}
